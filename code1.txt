// App.js

import {useState} from 'react'
import FormContext from './FormContext';
import Login from './components/Login';
import Home from './components/Home'

function App() {
  const [isLoggedIn, setIsLoggedIn] = useState(false)
  const [loginData, setLoginData] = useState({
    userName: "",
    email: "",
    password: ""
  })
  return <FormContext.Provider value={{
    loginData,
    setLoginData
  }}>
    {
      !isLoggedIn ? <Login /> : <Home />
    }
  </FormContext.Provider>
}

export default App;

// Login.js

import {useContext} from 'react'
import FormContext from '../FormContext'
import "../styles/Login.css"

function Login() {
    const {loginData, setLoginData} = useContext(FormContext)
    const {userName, email, password} = loginData
    
    function onSubmit() {
    }

    function onUserNameChange(event) {
        updateStateOnInputChange(event.target.value, "userName")
    }

    function onEmailChange(event) {
        updateStateOnInputChange(event.target.value, "email")
    }

    function onPasswordChange(event) {
        updateStateOnInputChange(event.target.value, "password")
    }

    function updateStateOnInputChange(value, type) {
        switch(type) {
            case "userName":
                setLoginData((prevLoginData) => ({
                    ...prevLoginData,
                    userName: value
                }))
            return
            case "email":
                setLoginData((prevLoginData) => ({
                    ...prevLoginData,
                    email: value
                }))
            return
            case "password":
                setLoginData((prevLoginData) => ({
                    ...prevLoginData,
                    password: value
                }))
            return
        }
    }	

    return <form className="loginContainer">
        <input placeholder="Enter Username" value={userName} className="loginField" onChange={onUserNameChange} required/>
        <input placeholder="Enter Email" value={email} type="email" className="loginField" required onChange={onEmailChange}/>
        <input placeholder="Enter password" value={password} type="password" className="loginField" required onChange={onPasswordChange}/>
        <button onSubmit={onSubmit} className="loginButton">Login</button>
        </form>
}

export default Login
















//data fetcher




import React, { useState, useRef, useEffect } from 'react'
import UserInfo from './UserInfo'


const defaultEndpoint = "https://reqres.in/api/users?page="

export default function DataFetcher() {
    const [ users, setUsers ] = useState([])
    const pageRef = useRef(1)

    const [isLoading, setIsLoading] = useState(true)

    useEffect(() => {
      fetchUserData()
    }, [])

    function fetchUserData(){
        fetch(`${defaultEndpoint}${pageRef.current}`)
        .then((response) => {
            if(response.status == 200)
                return response.json()
        })
        .then((users) =>{
            const { data } = users 
            setUsers((prevUsers) => [...prevUsers, ...data])
            setIsLoading(false)
        })
        .catch((error) => {
            console.log("Error: " , error)
        })
        console.log(users)
    }
    
    if(isLoading){
        <div className='loader'>
            <h3>Is Loading</h3>
        </div>
    }
  return users.length ? users.map((user, index) => <UserInfo key={index} lastName={user["last_name"]} firstName={user["first_name"]} avatarUrl={user["avatar"]} />) : <div className='loader'> <h1>No Users Found </h1></div>
}
